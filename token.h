#ifndef TOKEN_H
#define TOKEN_H

enum token {
	TOKEN_IDENT = 1,
	TOKEN_EXP,
	TOKEN_AND,
	TOKEN_OR,
	TOKEN_ADD,
	TOKEN_SUBTRACT,
	TOKEN_INCREMENT,
	TOKEN_DECREMENT,
	TOKEN_MODULUS,
	TOKEN_DIVISION,
	TOKEN_MULT,
	TOKEN_ASSIGN,
	TOKEN_LT,
	TOKEN_GT,
	TOKEN_NE, //not equal !=
	TOKEN_EQUAL,
	TOKEN_GE,
	TOKEN_LE,
	TOKEN_WHILE,
	TOKEN_ARRAY,
	TOKEN_ELSE,
	TOKEN_FALSE,
	TOKEN_FOR,
	TOKEN_FUNCTION,
	TOKEN_IF,
	TOKEN_INTEGER,
	TOKEN_PRINT,
	TOKEN_RETURN,
	TOKEN_TRUE,
	TOKEN_VOID,
	TOKEN_BOOLEAN,
	TOKEN_CHAR,
	TOKEN_STRING,
	TOKEN_SEMICOLON,
	TOKEN_COMMENT,
	ERROR
};
typedef enum token token_t;
const char* token_string(token_t t);

#endif
